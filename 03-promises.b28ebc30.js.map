{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,UACa,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,gBAC9BE,KAAMH,SAASC,cAAc,eAC7BG,OAAQJ,SAASC,cAAc,mBAE5BF,KAAKM,iBAAiB,UAK3B,SAAqBC,GACnBA,EAAEC,iBACF,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxCC,EAAwBH,EAAxBN,MAAOC,EAAiBK,EAAjBL,KAAMC,EAAWI,EAAXJ,OAErBQ,EAAaC,OAAOF,EAAMG,OAC1BC,EAAYF,OAAOV,EAAKW,OACxBE,EAAcH,OAAOT,EAAOU,OAE5B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAClCA,EAAE,IACHL,GAAcG,GAEhBG,EAAcD,EAAGL,GAChBO,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUnB,EAAKkB,EAALlB,MACjBL,EAAAyB,OAAOC,QAAQ,uBAAwCC,OAAfH,EAAS,QAAYG,OAANtB,EAAM,OAC3DuB,QAAMC,IAAI,uBAAwCF,OAAfH,EAAS,QAAYG,OAANtB,EAAM,M,IAE3DyB,OAAM,SAAAP,G,IAAGC,EAAQD,EAARC,SAAUnB,EAAKkB,EAALlB,MAClBL,EAAAyB,OAAOM,QAAQ,sBAAuCJ,OAAfH,EAAS,QAAYG,OAANtB,EAAM,OAC1DuB,QAAMC,IAAI,sBAAqCF,OAAfH,EAAS,QAAYG,OAANtB,EAAM,M,IAG3DI,EAAEuB,OAAOC,O,IA1BX,IAAIlB,EAAa,KACbG,EAAY,KACZC,EAAc,KA2BlB,SAASE,EAAcG,EAAUnB,GAC/B,IAAM6B,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAACd,WAAUnB,UAEnBkC,EAAO,CAACf,WAAUnB,S,GAEnBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('.form[delay]'),\n  step: document.querySelector('.form[step]'),\n  amount: document.querySelector('.form[amount]'),\n};\nrefs.form.addEventListener('submit', clickSubmit);\nlet delayInput = null;\nlet stepInput = null;\nlet amountInput = null;\n\nfunction clickSubmit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n\n  delayInput = Number(delay.value);\n  stepInput = Number(step.value);\n  amountInput = Number(amount.value);\n\n  for (let i = 1; i <= amountInput; i += 1) {\n    if(i>1){\n      delayInput += stepInput;\n    }\n    createPromise(i, delayInput)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n  e.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay)\n  });\n}\n"],"names":["$h6c0i","parcelRequire","form","document","querySelector","delay","step","amount","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","$ce04d3a99e08e73b$var$delayInput","Number","value","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","i","$ce04d3a99e08e73b$var$createPromise","then","param","position","Notify","success","concat","console","log","catch","failure","target","reset","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.b28ebc30.js.map"}